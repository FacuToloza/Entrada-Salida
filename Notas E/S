E/S

inputstream output stream, para flujo de bytes, 

caracteres
Reader y writer, en el pack java.io

Medotos de Input Stream

buffer,definicion y usos

Medotos de Output Stream
idem a input,con flush

Caracteres
buuuferrrr xd




Flujos Estandar


codigo copiado
package archivo;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import java.util.Locale;
import java.util.Scanner;

public class Archivo {
	private String nombre;

	public Archivo(String nombre) {
		this.nombre = nombre;
	}

	public double[] leerArchivo() {
		Scanner scanner = null;
		double[] datos = null;

		try {
			File file = new File("casos de prueba/in/" + this.nombre + ".in");
			scanner = new Scanner(file);
			// Especifica la configuraciÃ³n regional que se va a utilizar
			scanner.useLocale(Locale.ENGLISH);
			// Para la configuraciÃ³n regional de Argentina, utilizar:
			// arch.useLocale(new Locale("es_AR"));

			int cant = scanner.nextInt();
			datos = new double[cant];
			for (int i = 0; i < cant; i++) {
				double n = scanner.nextDouble();
				datos[i] = n;
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			// Cerrar el archivo, eso es mucho muy importante
			scanner.close();
		}
		return datos;
	}

	public void guardarArchivo(double[] datos) {
		FileWriter file = null;
		PrintWriter printerWriter = null;

		try {
			file = new FileWriter("casos de prueba/out/" + this.nombre + ".out");
			printerWriter = new PrintWriter(file);

			for (int i = 0; i < datos.length; i++) {
				// Imprime los datos y hace un salto de linea
				printerWriter.println(datos[i]);
			}
		} catch (Exception e) {
			e.printStackTrace();
		} finally {
			if (file != null) {
				try {
					file.close();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
	}
}




throws IOException, manejo de errores,
Recordar Formatos, escribir bien
MiProyecto
MiClase
miAtributo
miVariable
miMetodo
MI_CONSTANTE
mipackage
mipackage." ", el . es un anidador

NO BAJAR LAS LLAVES, VAN AL LADO , CON CONTROL+SHIF+F ME LO FORMATEA
Ayudar a la lectura, estan muy sencibles los programadores ahora
re tibios

Si ver tema performarce






Clase FILE

3 constructores
rutas relativas o absolutas


Metodos 

declarar variables lo mas cercanas a su uso



package archivo;

import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;

import org.junit.Assert;
import org.junit.Test;

import ejercicio.Resolucion;

public class ArchivoTest {

	@Test
	public void testUno() {
		Resolucion resolucion = new Resolucion();
		resolucion.resolver("uno");

		// Es una solución que contempla comparar en cualquier ejercicio
		// Pero que es estricto a que sea exactamente igual
		try {
			byte[] f1 = Files.readAllBytes(Paths.get("casos de prueba/out/uno.out"));
			byte[] f2 = Files.readAllBytes(Paths.get("casos de prueba/out esperado/uno.out"));
			Assert.assertArrayEquals(f1, f2);
		} catch (IOException e) {
			Assert.fail();
		}
	}

}



package ejercicio;

import archivo.Archivo;

public class Resolucion {
	public void resolver(String nombreArchivo) {
		Archivo archivo = new Archivo(nombreArchivo);
		double[] datos = archivo.leerArchivo();

		// Elevo al cuadrado
		for (int i = 0; i < datos.length; i++) {
			datos[i] = (double) Math.round(datos[i] * datos[i] * 10000d) / 10000d;
		}

		archivo.guardarArchivo(datos);
	}
}
